CREATE TABLE advertising (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, link VARCHAR(255), photo VARCHAR(255), is_activated TINYINT(1) DEFAULT '1' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE analysis (id BIGINT AUTO_INCREMENT, answer_id BIGINT NOT NULL, user_id BIGINT NOT NULL, analysis_type_id BIGINT NOT NULL, photo VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX answer_id_idx (answer_id), INDEX user_id_idx (user_id), INDEX analysis_type_id_idx (analysis_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE analysis_type (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE answer (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, question_id BIGINT NOT NULL, body text NOT NULL, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX question_id_idx (question_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article (id BIGINT AUTO_INCREMENT, specialist_id BIGINT NOT NULL, title text NOT NULL, photo VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, body text NOT NULL, is_activated TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX specialist_id_idx (specialist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE attached_family_users (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, user_about_id BIGINT NOT NULL, INDEX user_id_idx (user_id), INDEX user_about_id_idx (user_about_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE banner (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, link VARCHAR(255), photo VARCHAR(255), is_activated TINYINT(1) DEFAULT '1' NOT NULL, order_field BIGINT DEFAULT 0 NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE certificate (id BIGINT AUTO_INCREMENT, specialist_id BIGINT, name VARCHAR(255) NOT NULL, photo VARCHAR(255) NOT NULL, INDEX specialist_id_idx (specialist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, article_id BIGINT, prompt_id BIGINT, body text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX article_id_idx (article_id), INDEX prompt_id_idx (prompt_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE complaint (id BIGINT AUTO_INCREMENT, question_id BIGINT NOT NULL, specialist_id BIGINT NOT NULL, body text, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX question_id_idx (question_id), INDEX specialist_id_idx (specialist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE consilium (id BIGINT AUTO_INCREMENT, question_id BIGINT NOT NULL, closed TINYINT(1) DEFAULT '0' NOT NULL, closing_date DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX question_id_idx (question_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE consilium_specialist (consilium_id BIGINT, specialist_id BIGINT, PRIMARY KEY(consilium_id, specialist_id)) ENGINE = INNODB;
CREATE TABLE consilium_answer (id BIGINT AUTO_INCREMENT, consilium_id BIGINT NOT NULL, specialist_id BIGINT NOT NULL, body text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX consilium_id_idx (consilium_id), INDEX specialist_id_idx (specialist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE documentation (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, file VARCHAR(255) NOT NULL, order_field BIGINT DEFAULT 0 NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE feedback (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, body text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE log (id BIGINT AUTO_INCREMENT, modelname VARCHAR(50) NOT NULL, serialize TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE log_message (id BIGINT AUTO_INCREMENT, type VARCHAR(50) NOT NULL, body TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lpu (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, location VARCHAR(255), token VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lpu_specialist (lpu_id BIGINT, specialist_id BIGINT, PRIMARY KEY(lpu_id, specialist_id)) ENGINE = INNODB;
CREATE TABLE message_error (id BIGINT AUTO_INCREMENT, body text NOT NULL, photo VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, body text NOT NULL, photo VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE notice (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, type VARCHAR(255) NOT NULL, inner_id BIGINT NOT NULL, event VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE page (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, folder VARCHAR(255) UNIQUE, body text NOT NULL, is_activated TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE partner (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, logo VARCHAR(255) NOT NULL, body text, link VARCHAR(255), order_field BIGINT DEFAULT 0 NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE permission (id BIGINT AUTO_INCREMENT, credential VARCHAR(255) NOT NULL UNIQUE, description VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE prompt (id BIGINT AUTO_INCREMENT, specialist_id BIGINT NOT NULL, specialty_id BIGINT NOT NULL, title VARCHAR(255) NOT NULL, photo VARCHAR(255), description VARCHAR(255) NOT NULL, body text, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX specialist_id_idx (specialist_id), INDEX specialty_id_idx (specialty_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE question (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, user_about_id BIGINT, body text NOT NULL, is_anonymous TINYINT(1) DEFAULT '0' NOT NULL, approved TINYINT(1) DEFAULT '0' NOT NULL, closed_by BIGINT, closing_date DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX user_about_id_idx (user_about_id), INDEX closed_by_idx (closed_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE question_data (id BIGINT AUTO_INCREMENT, question_id BIGINT, INDEX question_id_idx (question_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE question_sheet_history (id BIGINT AUTO_INCREMENT, question_id BIGINT NOT NULL, sheet_history_field_id BIGINT NOT NULL, value TEXT NOT NULL, INDEX question_id_idx (question_id), INDEX sheet_history_field_id_idx (sheet_history_field_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE question_specialist (question_id BIGINT, specialist_id BIGINT, PRIMARY KEY(question_id, specialist_id)) ENGINE = INNODB;
CREATE TABLE question_specialty (question_id BIGINT, specialty_id BIGINT, PRIMARY KEY(question_id, specialty_id)) ENGINE = INNODB;
CREATE TABLE receive_location (reception_id BIGINT, work_place_id BIGINT, PRIMARY KEY(reception_id, work_place_id)) ENGINE = INNODB;
CREATE TABLE receive_datetime (id BIGINT AUTO_INCREMENT, reception_id BIGINT NOT NULL, datetime DATETIME NOT NULL, INDEX reception_id_idx (reception_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE reception_contract (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, specialist_id BIGINT NOT NULL, question_id BIGINT NOT NULL, price BIGINT DEFAULT 0, is_activated TINYINT(1) DEFAULT '0' NOT NULL, is_reject TINYINT(1) DEFAULT '0' NOT NULL, reject_reason VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX specialist_id_idx (specialist_id), INDEX question_id_idx (question_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE review (id BIGINT AUTO_INCREMENT, question_id BIGINT NOT NULL, user_id BIGINT NOT NULL, specialist_id BIGINT NOT NULL, body text, informative BIGINT DEFAULT 0 NOT NULL, courtesy BIGINT DEFAULT 0 NOT NULL, approved TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX question_id_idx (question_id), INDEX user_id_idx (user_id), INDEX specialist_id_idx (specialist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session (id VARCHAR(32), session_data text, session_time BIGINT, user_id BIGINT, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sheet_history (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sheet_history_field (id BIGINT AUTO_INCREMENT, sheet_history_id BIGINT NOT NULL, title TEXT, field_type VARCHAR(50) NOT NULL, field_options TEXT, order_field BIGINT DEFAULT 0 NOT NULL, is_required TINYINT(1) DEFAULT '1' NOT NULL, INDEX sheet_history_id_idx (sheet_history_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE specialist (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, specialty_id BIGINT NOT NULL, rating FLOAT(2, 1), answers_count BIGINT, about TEXT, education TEXT, live_reception TINYINT(1) DEFAULT '0' NOT NULL, certificate TEXT, INDEX user_id_idx (user_id), INDEX specialty_id_idx (specialty_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE specialist_online (id BIGINT AUTO_INCREMENT, specialist_id BIGINT NOT NULL, date DATETIME NOT NULL, INDEX specialist_id_idx (specialist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE specialist_work_place (id BIGINT AUTO_INCREMENT, specialist_id BIGINT NOT NULL, title VARCHAR(255) NOT NULL, hidden TINYINT(1) DEFAULT '0' NOT NULL, INDEX specialist_id_idx (specialist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE specialty (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, description TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user (id BIGINT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, first_name VARCHAR(255), second_name VARCHAR(255), middle_name VARCHAR(255), gender VARCHAR(1) NOT NULL, birth_date DATETIME NOT NULL, email VARCHAR(128), phone VARCHAR(255), salt VARCHAR(128), password VARCHAR(128), photo VARCHAR(255), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, password_check VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX name_idx_idx (username), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_group (id BIGINT AUTO_INCREMENT, title VARCHAR(128) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_group_permissions (user_group_id BIGINT, permission_id BIGINT, PRIMARY KEY(user_group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE user_group_users (user_id BIGINT, user_group_id BIGINT, PRIMARY KEY(user_id, user_group_id)) ENGINE = INNODB;
CREATE TABLE user_log (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, log_type VARCHAR(50) NOT NULL, model VARCHAR(50) NOT NULL, model_id BIGINT NOT NULL, log TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX model_idx_idx (model), INDEX model_id_idx_idx (model_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_permissions (user_id BIGINT, permission_id BIGINT, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE cs_setting (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL UNIQUE, type VARCHAR(255) DEFAULT 'input' NOT NULL, widget_options LONGTEXT, value LONGTEXT, setting_group VARCHAR(255) DEFAULT NULL, setting_default LONGTEXT DEFAULT NULL, slug VARCHAR(255), UNIQUE INDEX cs_setting_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE analysis ADD CONSTRAINT analysis_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE analysis ADD CONSTRAINT analysis_answer_id_answer_id FOREIGN KEY (answer_id) REFERENCES answer(id) ON DELETE CASCADE;
ALTER TABLE analysis ADD CONSTRAINT analysis_analysis_type_id_analysis_type_id FOREIGN KEY (analysis_type_id) REFERENCES analysis_type(id) ON DELETE CASCADE;
ALTER TABLE answer ADD CONSTRAINT answer_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE answer ADD CONSTRAINT answer_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE article ADD CONSTRAINT article_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE attached_family_users ADD CONSTRAINT attached_family_users_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE attached_family_users ADD CONSTRAINT attached_family_users_user_about_id_user_id FOREIGN KEY (user_about_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE certificate ADD CONSTRAINT certificate_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_prompt_id_prompt_id FOREIGN KEY (prompt_id) REFERENCES prompt(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE complaint ADD CONSTRAINT complaint_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE complaint ADD CONSTRAINT complaint_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE consilium ADD CONSTRAINT consilium_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE consilium_specialist ADD CONSTRAINT consilium_specialist_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE consilium_specialist ADD CONSTRAINT consilium_specialist_consilium_id_consilium_id FOREIGN KEY (consilium_id) REFERENCES consilium(id) ON DELETE CASCADE;
ALTER TABLE consilium_answer ADD CONSTRAINT consilium_answer_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE consilium_answer ADD CONSTRAINT consilium_answer_consilium_id_consilium_id FOREIGN KEY (consilium_id) REFERENCES consilium(id) ON DELETE CASCADE;
ALTER TABLE feedback ADD CONSTRAINT feedback_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE lpu_specialist ADD CONSTRAINT lpu_specialist_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id);
ALTER TABLE lpu_specialist ADD CONSTRAINT lpu_specialist_lpu_id_lpu_id FOREIGN KEY (lpu_id) REFERENCES lpu(id);
ALTER TABLE notice ADD CONSTRAINT notice_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE prompt ADD CONSTRAINT prompt_specialty_id_specialty_id FOREIGN KEY (specialty_id) REFERENCES specialty(id) ON DELETE CASCADE;
ALTER TABLE prompt ADD CONSTRAINT prompt_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE question ADD CONSTRAINT question_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE question ADD CONSTRAINT question_user_about_id_user_id FOREIGN KEY (user_about_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE question ADD CONSTRAINT question_closed_by_user_id FOREIGN KEY (closed_by) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE question_data ADD CONSTRAINT question_data_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE question_sheet_history ADD CONSTRAINT question_sheet_history_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE question_sheet_history ADD CONSTRAINT qssi FOREIGN KEY (sheet_history_field_id) REFERENCES sheet_history_field(id) ON DELETE CASCADE;
ALTER TABLE question_specialist ADD CONSTRAINT question_specialist_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE question_specialist ADD CONSTRAINT question_specialist_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE question_specialty ADD CONSTRAINT question_specialty_specialty_id_specialty_id FOREIGN KEY (specialty_id) REFERENCES specialty(id) ON DELETE CASCADE;
ALTER TABLE question_specialty ADD CONSTRAINT question_specialty_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE receive_location ADD CONSTRAINT receive_location_work_place_id_specialist_work_place_id FOREIGN KEY (work_place_id) REFERENCES specialist_work_place(id) ON DELETE CASCADE;
ALTER TABLE receive_location ADD CONSTRAINT receive_location_reception_id_reception_contract_id FOREIGN KEY (reception_id) REFERENCES reception_contract(id) ON DELETE CASCADE;
ALTER TABLE receive_datetime ADD CONSTRAINT receive_datetime_reception_id_reception_contract_id FOREIGN KEY (reception_id) REFERENCES reception_contract(id) ON DELETE CASCADE;
ALTER TABLE reception_contract ADD CONSTRAINT reception_contract_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE reception_contract ADD CONSTRAINT reception_contract_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE reception_contract ADD CONSTRAINT reception_contract_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE review ADD CONSTRAINT review_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE review ADD CONSTRAINT review_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE review ADD CONSTRAINT review_question_id_question_id FOREIGN KEY (question_id) REFERENCES question(id) ON DELETE CASCADE;
ALTER TABLE session ADD CONSTRAINT session_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE sheet_history_field ADD CONSTRAINT sheet_history_field_sheet_history_id_sheet_history_id FOREIGN KEY (sheet_history_id) REFERENCES sheet_history(id) ON DELETE CASCADE;
ALTER TABLE specialist ADD CONSTRAINT specialist_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE specialist ADD CONSTRAINT specialist_specialty_id_specialty_id FOREIGN KEY (specialty_id) REFERENCES specialty(id) ON DELETE CASCADE;
ALTER TABLE specialist_online ADD CONSTRAINT specialist_online_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE specialist_work_place ADD CONSTRAINT specialist_work_place_specialist_id_specialist_id FOREIGN KEY (specialist_id) REFERENCES specialist(id) ON DELETE CASCADE;
ALTER TABLE user_group_permissions ADD CONSTRAINT user_group_permissions_permission_id_permission_id FOREIGN KEY (permission_id) REFERENCES permission(id);
ALTER TABLE user_group_users ADD CONSTRAINT user_group_users_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id);
ALTER TABLE user_log ADD CONSTRAINT user_log_user_id_user_id FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE;
ALTER TABLE user_permissions ADD CONSTRAINT user_permissions_permission_id_permission_id FOREIGN KEY (permission_id) REFERENCES permission(id);
