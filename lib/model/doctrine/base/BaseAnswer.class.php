<?php

/**
 * BaseAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $question_id
 * @property text $body
 * @property string $type
 * @property string $comment_id
 * @property string $attachment
 * @property User $User
 * @property Question $Question
 * @property Doctrine_Collection $Analysis
 * 
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method integer             getQuestionId()  Returns the current record's "question_id" value
 * @method text                getBody()        Returns the current record's "body" value
 * @method string              getType()        Returns the current record's "type" value
 * @method string              getCommentId()   Returns the current record's "comment_id" value
 * @method string              getAttachment()  Returns the current record's "attachment" value
 * @method User                getUser()        Returns the current record's "User" value
 * @method Question            getQuestion()    Returns the current record's "Question" value
 * @method Doctrine_Collection getAnalysis()    Returns the current record's "Analysis" collection
 * @method Answer              setUserId()      Sets the current record's "user_id" value
 * @method Answer              setQuestionId()  Sets the current record's "question_id" value
 * @method Answer              setBody()        Sets the current record's "body" value
 * @method Answer              setType()        Sets the current record's "type" value
 * @method Answer              setCommentId()   Sets the current record's "comment_id" value
 * @method Answer              setAttachment()  Sets the current record's "attachment" value
 * @method Answer              setUser()        Sets the current record's "User" value
 * @method Answer              setQuestion()    Sets the current record's "Question" value
 * @method Answer              setAnalysis()    Sets the current record's "Analysis" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('answer');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('body', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('comment_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('attachment', 'string', 10000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 10000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Analysis', array(
             'local' => 'id',
             'foreign' => 'answer_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}