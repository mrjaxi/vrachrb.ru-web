<?php

/**
 * BaseLpu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $location
 * @property string $token
 * @property Doctrine_Collection $Specialists
 * @property Doctrine_Collection $Specialist
 * @property Doctrine_Collection $Lpu
 * 
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getLocation()    Returns the current record's "location" value
 * @method string              getToken()       Returns the current record's "token" value
 * @method Doctrine_Collection getSpecialists() Returns the current record's "Specialists" collection
 * @method Doctrine_Collection getSpecialist()  Returns the current record's "Specialist" collection
 * @method Doctrine_Collection getLpu()         Returns the current record's "Lpu" collection
 * @method Lpu                 setTitle()       Sets the current record's "title" value
 * @method Lpu                 setLocation()    Sets the current record's "location" value
 * @method Lpu                 setToken()       Sets the current record's "token" value
 * @method Lpu                 setSpecialists() Sets the current record's "Specialists" collection
 * @method Lpu                 setSpecialist()  Sets the current record's "Specialist" collection
 * @method Lpu                 setLpu()         Sets the current record's "Lpu" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLpu extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lpu');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Lpu as Specialists', array(
             'refClass' => 'LpuSpecialist',
             'local' => 'lpu_id',
             'foreign' => 'specialist_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Specialist', array(
             'refClass' => 'LpuSpecialist',
             'local' => 'lpu_id',
             'foreign' => 'specialist_id'));

        $this->hasMany('Lpu', array(
             'refClass' => 'LpuSpecialist',
             'local' => 'specialist_id',
             'foreign' => 'lpu_id'));
    }
}