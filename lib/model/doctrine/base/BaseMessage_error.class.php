<?php

/**
 * BaseMessage_error
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property text $body
 * @property string $photo
 * @property integer $user_id
 * @property enum $status
 * @property User $User
 * 
 * @method text          getBody()    Returns the current record's "body" value
 * @method string        getPhoto()   Returns the current record's "photo" value
 * @method integer       getUserId()  Returns the current record's "user_id" value
 * @method enum          getStatus()  Returns the current record's "status" value
 * @method User          getUser()    Returns the current record's "User" value
 * @method Message_error setBody()    Sets the current record's "body" value
 * @method Message_error setPhoto()   Sets the current record's "photo" value
 * @method Message_error setUserId()  Sets the current record's "user_id" value
 * @method Message_error setStatus()  Sets the current record's "status" value
 * @method Message_error setUser()    Sets the current record's "User" value
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMessage_error extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('message_error');
        $this->hasColumn('body', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'no_answer',
              1 => 'detail',
              2 => 'in_work',
              3 => 'completed',
              4 => 'defect',
             ),
             'default' => 'no_answer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}