<?php

/**
 * BasePrompt
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $specialist_id
 * @property integer $specialty_id
 * @property string $title
 * @property string $title_url
 * @property string $photo
 * @property string $video
 * @property string $description
 * @property text $body
 * @property Specialist $Specialist
 * @property Specialty $Specialty
 * @property Doctrine_Collection $Comment
 * 
 * @method integer             getSpecialistId()  Returns the current record's "specialist_id" value
 * @method integer             getSpecialtyId()   Returns the current record's "specialty_id" value
 * @method string              getTitle()         Returns the current record's "title" value
 * @method string              getTitleUrl()      Returns the current record's "title_url" value
 * @method string              getPhoto()         Returns the current record's "photo" value
 * @method string              getVideo()         Returns the current record's "video" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method text                getBody()          Returns the current record's "body" value
 * @method Specialist          getSpecialist()    Returns the current record's "Specialist" value
 * @method Specialty           getSpecialty()     Returns the current record's "Specialty" value
 * @method Doctrine_Collection getComment()       Returns the current record's "Comment" collection
 * @method Prompt              setSpecialistId()  Sets the current record's "specialist_id" value
 * @method Prompt              setSpecialtyId()   Sets the current record's "specialty_id" value
 * @method Prompt              setTitle()         Sets the current record's "title" value
 * @method Prompt              setTitleUrl()      Sets the current record's "title_url" value
 * @method Prompt              setPhoto()         Sets the current record's "photo" value
 * @method Prompt              setVideo()         Sets the current record's "video" value
 * @method Prompt              setDescription()   Sets the current record's "description" value
 * @method Prompt              setBody()          Sets the current record's "body" value
 * @method Prompt              setSpecialist()    Sets the current record's "Specialist" value
 * @method Prompt              setSpecialty()     Sets the current record's "Specialty" value
 * @method Prompt              setComment()       Sets the current record's "Comment" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePrompt extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('prompt');
        $this->hasColumn('specialist_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('specialty_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('title_url', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('video', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('body', 'text', null, array(
             'type' => 'text',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Specialist', array(
             'local' => 'specialist_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Specialty', array(
             'local' => 'specialty_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'prompt_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}