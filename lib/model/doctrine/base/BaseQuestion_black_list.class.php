<?php

/**
 * BaseQuestion_black_list
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $question_id
 * @property integer $specialist_id
 * @property Question $Question
 * @property Specialist $Specialist
 * 
 * @method integer             getQuestionId()    Returns the current record's "question_id" value
 * @method integer             getSpecialistId()  Returns the current record's "specialist_id" value
 * @method Question            getQuestion()      Returns the current record's "Question" value
 * @method Specialist          getSpecialist()    Returns the current record's "Specialist" value
 * @method Question_black_list setQuestionId()    Sets the current record's "question_id" value
 * @method Question_black_list setSpecialistId()  Sets the current record's "specialist_id" value
 * @method Question_black_list setQuestion()      Sets the current record's "Question" value
 * @method Question_black_list setSpecialist()    Sets the current record's "Specialist" value
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuestion_black_list extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('question_black_list');
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('specialist_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Specialist', array(
             'local' => 'specialist_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}