<?php

/**
 * BaseReceiveLocation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $reception_id
 * @property integer $work_place_id
 * @property Reception_contract $Reception_contract
 * @property Specialist_work_place $Specialist_work_place
 * 
 * @method integer               getReceptionId()           Returns the current record's "reception_id" value
 * @method integer               getWorkPlaceId()           Returns the current record's "work_place_id" value
 * @method Reception_contract    getReceptionContract()     Returns the current record's "Reception_contract" value
 * @method Specialist_work_place getSpecialistWorkPlace()   Returns the current record's "Specialist_work_place" value
 * @method ReceiveLocation       setReceptionId()           Sets the current record's "reception_id" value
 * @method ReceiveLocation       setWorkPlaceId()           Sets the current record's "work_place_id" value
 * @method ReceiveLocation       setReceptionContract()     Sets the current record's "Reception_contract" value
 * @method ReceiveLocation       setSpecialistWorkPlace()   Sets the current record's "Specialist_work_place" value
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReceiveLocation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('receive_location');
        $this->hasColumn('reception_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('work_place_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Reception_contract', array(
             'local' => 'reception_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Specialist_work_place', array(
             'local' => 'work_place_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}