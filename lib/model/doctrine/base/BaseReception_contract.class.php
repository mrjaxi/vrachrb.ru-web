<?php

/**
 * BaseReception_contract
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $specialist_id
 * @property integer $question_id
 * @property integer $price
 * @property boolean $is_activated
 * @property boolean $is_reject
 * @property string $reject_reason
 * @property User $User
 * @property Specialist $Specialist
 * @property Question $Question
 * @property Doctrine_Collection $Location
 * @property Doctrine_Collection $ReceiveLocation
 * @property Doctrine_Collection $Receive_datetime
 * 
 * @method integer             getUserId()           Returns the current record's "user_id" value
 * @method integer             getSpecialistId()     Returns the current record's "specialist_id" value
 * @method integer             getQuestionId()       Returns the current record's "question_id" value
 * @method integer             getPrice()            Returns the current record's "price" value
 * @method boolean             getIsActivated()      Returns the current record's "is_activated" value
 * @method boolean             getIsReject()         Returns the current record's "is_reject" value
 * @method string              getRejectReason()     Returns the current record's "reject_reason" value
 * @method User                getUser()             Returns the current record's "User" value
 * @method Specialist          getSpecialist()       Returns the current record's "Specialist" value
 * @method Question            getQuestion()         Returns the current record's "Question" value
 * @method Doctrine_Collection getLocation()         Returns the current record's "Location" collection
 * @method Doctrine_Collection getReceiveLocation()  Returns the current record's "ReceiveLocation" collection
 * @method Doctrine_Collection getReceiveDatetime()  Returns the current record's "Receive_datetime" collection
 * @method Reception_contract  setUserId()           Sets the current record's "user_id" value
 * @method Reception_contract  setSpecialistId()     Sets the current record's "specialist_id" value
 * @method Reception_contract  setQuestionId()       Sets the current record's "question_id" value
 * @method Reception_contract  setPrice()            Sets the current record's "price" value
 * @method Reception_contract  setIsActivated()      Sets the current record's "is_activated" value
 * @method Reception_contract  setIsReject()         Sets the current record's "is_reject" value
 * @method Reception_contract  setRejectReason()     Sets the current record's "reject_reason" value
 * @method Reception_contract  setUser()             Sets the current record's "User" value
 * @method Reception_contract  setSpecialist()       Sets the current record's "Specialist" value
 * @method Reception_contract  setQuestion()         Sets the current record's "Question" value
 * @method Reception_contract  setLocation()         Sets the current record's "Location" collection
 * @method Reception_contract  setReceiveLocation()  Sets the current record's "ReceiveLocation" collection
 * @method Reception_contract  setReceiveDatetime()  Sets the current record's "Receive_datetime" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReception_contract extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reception_contract');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('specialist_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_reject', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('reject_reason', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Specialist', array(
             'local' => 'specialist_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Specialist_work_place as Location', array(
             'refClass' => 'ReceiveLocation',
             'local' => 'reception_id',
             'foreign' => 'work_place_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ReceiveLocation', array(
             'local' => 'id',
             'foreign' => 'reception_id'));

        $this->hasMany('Receive_datetime', array(
             'local' => 'id',
             'foreign' => 'reception_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}