<?php

/**
 * BaseReview
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $question_id
 * @property integer $user_id
 * @property integer $specialist_id
 * @property text $body
 * @property integer $informative
 * @property integer $courtesy
 * @property boolean $approved
 * @property Question $Question
 * @property User $User
 * @property Specialist $Specialist
 * 
 * @method integer    getQuestionId()    Returns the current record's "question_id" value
 * @method integer    getUserId()        Returns the current record's "user_id" value
 * @method integer    getSpecialistId()  Returns the current record's "specialist_id" value
 * @method text       getBody()          Returns the current record's "body" value
 * @method integer    getInformative()   Returns the current record's "informative" value
 * @method integer    getCourtesy()      Returns the current record's "courtesy" value
 * @method boolean    getApproved()      Returns the current record's "approved" value
 * @method Question   getQuestion()      Returns the current record's "Question" value
 * @method User       getUser()          Returns the current record's "User" value
 * @method Specialist getSpecialist()    Returns the current record's "Specialist" value
 * @method Review     setQuestionId()    Sets the current record's "question_id" value
 * @method Review     setUserId()        Sets the current record's "user_id" value
 * @method Review     setSpecialistId()  Sets the current record's "specialist_id" value
 * @method Review     setBody()          Sets the current record's "body" value
 * @method Review     setInformative()   Sets the current record's "informative" value
 * @method Review     setCourtesy()      Sets the current record's "courtesy" value
 * @method Review     setApproved()      Sets the current record's "approved" value
 * @method Review     setQuestion()      Sets the current record's "Question" value
 * @method Review     setUser()          Sets the current record's "User" value
 * @method Review     setSpecialist()    Sets the current record's "Specialist" value
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReview extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('review');
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('specialist_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('body', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('informative', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('courtesy', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('approved', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Specialist', array(
             'local' => 'specialist_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}